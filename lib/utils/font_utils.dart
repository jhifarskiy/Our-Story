import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

class FontUtils {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —à—Ä–∏—Ñ—Ç–∞ Cinzel
  static Future<bool> isCinzelFontLoaded() async {
    try {
      // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å —à—Ä–∏—Ñ—Ç
      await rootBundle.load('assets/fonts/Cinzel-Regular.ttf');
      return true;
    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à—Ä–∏—Ñ—Ç–∞ Cinzel: $e');
      return false;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–µ—Å–∞—Ö —à—Ä–∏—Ñ—Ç–∞
  static List<FontWeight> getAvailableFontWeights() {
    return [
      FontWeight.w400, // Regular
      FontWeight.w500, // Medium
      FontWeight.w600, // SemiBold
      FontWeight.w700, // Bold
      FontWeight.w800, // ExtraBold
      FontWeight.w900, // Black
    ];
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ TextStyle —Å —à—Ä–∏—Ñ—Ç–æ–º Cinzel
  static TextStyle createCinzelStyle({
    double fontSize = 16,
    FontWeight fontWeight = FontWeight.w400,
    Color color = Colors.black,
    double height = 1.0,
  }) {
    return TextStyle(
      fontFamily: 'Cinzel',
      fontSize: fontSize,
      fontWeight: fontWeight,
      color: color,
      height: height,
    );
  }

  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–µ–∫—Å—Ç–∞ —Å —à—Ä–∏—Ñ—Ç–æ–º Cinzel
  static Widget createFontTestWidget(String text) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          '–¢–µ—Å—Ç —à—Ä–∏—Ñ—Ç–∞ Cinzel:',
          style: TextStyle(fontSize: 14, color: Colors.grey[600]),
        ),
        const SizedBox(height: 8),
        Text(
          text,
          style: createCinzelStyle(
            fontSize: 24,
            fontWeight: FontWeight.bold,
            color: Colors.black87,
          ),
        ),
        const SizedBox(height: 8),
        Text(
          '–ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –≤—ã—à–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫—Ä–∞—Å–∏–≤—ã–º –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º,',
          style: TextStyle(fontSize: 12, color: Colors.grey[500]),
        ),
        Text(
          '—Ç–æ —à—Ä–∏—Ñ—Ç Cinzel –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!',
          style: TextStyle(
            fontSize: 12,
            color: Colors.green[600],
            fontWeight: FontWeight.bold,
          ),
        ),
      ],
    );
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à—Ä–∏—Ñ—Ç–∞—Ö –≤ –∫–æ–Ω—Å–æ–ª—å
  static Future<void> logFontStatus() async {
    print('üî§ === –ü–†–û–í–ï–†–ö–ê –®–†–ò–§–¢–û–í ===');
    print('üî§ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: Our Story');
    print('üî§ –®—Ä–∏—Ñ—Ç: Cinzel');

    final isLoaded = await isCinzelFontLoaded();
    if (isLoaded) {
      print('‚úÖ –®—Ä–∏—Ñ—Ç Cinzel –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
      print(
        '‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Å–∞: ${getAvailableFontWeights().map((w) => w.value).join(', ')}',
      );
    } else {
      print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à—Ä–∏—Ñ—Ç–∞ Cinzel');
      print('‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ assets/fonts/');
    }
    print('üî§ ========================');
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ —à—Ä–∏—Ñ—Ç–æ–≤ Cinzel
  static List<String> getCinzelFontFiles() {
    return [
      'assets/fonts/Cinzel-Regular.ttf',
      'assets/fonts/Cinzel-Medium.ttf',
      'assets/fonts/Cinzel-SemiBold.ttf',
      'assets/fonts/Cinzel-Bold.ttf',
      'assets/fonts/Cinzel-ExtraBold.ttf',
      'assets/fonts/Cinzel-Black.ttf',
    ];
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ —à—Ä–∏—Ñ—Ç–æ–≤
  static Future<Map<String, bool>> checkAllFontFiles() async {
    final results = <String, bool>{};

    for (final fontFile in getCinzelFontFiles()) {
      try {
        await rootBundle.load(fontFile);
        results[fontFile] = true;
        print('‚úÖ $fontFile - OK');
      } catch (e) {
        results[fontFile] = false;
        print('‚ùå $fontFile - –ù–ï –ù–ê–ô–î–ï–ù');
      }
    }

    return results;
  }
}
